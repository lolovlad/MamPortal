"""empty message

Revision ID: d8f4b27e7073
Revises: 
Create Date: 2025-01-20 12:55:16.262778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd8f4b27e7073'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('region', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('state_event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_article',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('type_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('date_conducting', sa.DateTime(), nullable=False),
    sa.Column('date_stop', sa.DateTime(), nullable=False),
    sa.Column('id_city', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.LargeBinary(), nullable=True),
    sa.Column('id_state', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_city'], ['city.id'], ),
    sa.ForeignKeyConstraint(['id_state'], ['state_event.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('id_type', sa.Integer(), nullable=True),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_type'], ['type_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('article',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('id_autor', sa.Integer(), nullable=True),
    sa.Column('date_publications', sa.DateTime(), nullable=False),
    sa.Column('id_type', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.LargeBinary(), nullable=True),
    sa.ForeignKeyConstraint(['id_autor'], ['user.id'], ),
    sa.ForeignKeyConstraint(['id_type'], ['type_article.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('pregnancy_calendar',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('calendar', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('tag_event',
    sa.Column('id_tag', sa.Integer(), nullable=False),
    sa.Column('id_event', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_event'], ['event.id'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id_tag', 'id_event')
    )
    op.create_table('user_to_event',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_event', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_event'], ['event.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_event')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('id_article', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_article'], ['article.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('like',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_article', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_article'], ['article.id'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_article')
    )
    op.create_table('tag_article',
    sa.Column('id_tag', sa.Integer(), nullable=False),
    sa.Column('id_article', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_article'], ['article.id'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id_tag', 'id_article')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag_article')
    op.drop_table('like')
    op.drop_table('comment')
    op.drop_table('user_to_event')
    op.drop_table('tag_event')
    op.drop_table('pregnancy_calendar')
    op.drop_table('article')
    op.drop_table('user')
    op.drop_table('event')
    op.drop_table('type_user')
    op.drop_table('type_article')
    op.drop_table('tag')
    op.drop_table('state_event')
    op.drop_table('city')
    # ### end Alembic commands ###
